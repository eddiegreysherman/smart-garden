import time
import serial
import json
from datetime import datetime
from app import create_app, db
from app.models import SensorReading

class SoilSensor:
    def __init__(self, port='/dev/ttyACM0', baudrate=9600):
        self.port = port
        self.baudrate = baudrate
        self.serial = None
        # Add app context
        self.app = create_app()
        self.app_context = self.app.app_context()
        self.app_context.push()

    def connect(self):
        try:
            self.serial = serial.Serial(self.port, self.baudrate, timeout=1)
            return True
        except:
            return False

    def read_sensor(self):
        if not self.serial:
            if not self.connect():
                return None

        try:
            if self.serial.in_waiting:
                line = self.serial.readline().decode('utf-8').strip()
                data = json.loads(line)
                return data.get('moisture')
        except:
            return None

def store_reading(self, moisture):
    """Store moisture data as a new reading"""
    if moisture is not None:
        try:
            # Create a new reading with the moisture value
            new_reading = SensorReading(
                moisture=moisture,
                # Set default values for other required fields
                co2=0,
                temperature=0,
                humidity=0
            )
            db.session.add(new_reading)
            db.session.commit()
        except Exception as e:
            print(f"Error storing moisture reading: {e}")
            db.session.rollback()

    def run(self):
        """Main loop for continuous readings"""
        try:
            while True:
                moisture = self.read_sensor()
                self.store_reading(moisture)
                time.sleep(60)  # Take reading every minute
        except KeyboardInterrupt:
            print("Shutting down soil moisture sensor...")
        finally:
            self.cleanup()
            self.app_context.pop()

    def cleanup(self):
        if self.serial:
            self.serial.close()

if __name__ == '__main__':
    sensor = SoilSensor()
    sensor.run()
